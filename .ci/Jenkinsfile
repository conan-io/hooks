pipeline {
    agent none
    stages {
        stage("Macos") {
            failFast true
            parallel {
                stage('Macos - py36') {
                    agent {
                        label 'M2Macos'
                    }
                    stages {
                        stage('Macos - py36 - Conan v1 latest') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = "conan==1.*"
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_macos.sh'
                                sh '.ci/run_tests.sh'
                            }
                        }
                        stage('Macos - py36 - Conan v2 latest') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = "conan==2.*"
                                PYTEST_ARGS = "./tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_macos.sh'
                                sh '.ci/run_tests.sh'
                            }
                        }
                    }
                }
                stage('Macos - py38') {
                    agent {
                        label 'M2Macos'
                    }
                    stages {
                        stage('Macos - py38 - Conan v1 latest') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = "conan==1.*"
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_macos.sh'
                                sh '.ci/run_tests.sh'
                            }
                        }
                        stage('Macos - py38 - Conan v1 prev') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = "conan==1.61.0"
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_macos.sh'
                                sh '.ci/run_tests.sh'
                            }
                        }
                        stage('Macos - py38 - conan v2 latest') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = "conan==2.*"
                                PYTEST_ARGS = "./tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_macos.sh'
                                sh '.ci/run_tests.sh'
                            }
                        }
                        stage('Macos - py38 - conan v2 prev') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = "conan==2.0.16"
                                PYTEST_ARGS = "./tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_macos.sh'
                                sh '.ci/run_tests.sh'
                            }
                        }
                    }
                }
            }
        }
        stage("Windows") {
            failFast true
            parallel {
                stage('Windows - py38') {
                    agent {
                        label 'Windows'
                    }
                    stages {
                        stage('Windows - py38 - conan v1 latest') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'conan==1.*'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                bat '.ci/generate_env_windows.bat'
                                bat '.ci/run_tests.bat'
                            }
                        }
                        stage('Windows - py38 - conan v2 latest') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'conan==2.*'
                                PYTEST_ARGS = "./tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                bat '.ci/generate_env_windows.bat'
                                bat '.ci/run_tests.bat'
                            }
                        }
                    }
                }
                stage('Windows - py39') {
                    agent {
                        label 'Windows'
                    }
                    stages {
                        stage('Windows - py39 - conan v1 dev') {
                            environment {
                                PYVER = 'py39'
                                CONAN_REQUIREMENT = 'git+https://github.com/conan-io/conan.git@develop'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                bat '.ci/generate_env_windows.bat'
                                bat '.ci/run_tests.bat'
                            }
                        }
                        stage('Windows - py39 - conan v1 latest') {
                            environment {
                               PYVER = 'py39'
                                CONAN_REQUIREMENT = 'conan==1.*'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                bat '.ci/generate_env_windows.bat'
                                bat '.ci/run_tests.bat'
                            }
                        }
                        stage('Windows - py39 - conan v2 dev') {
                            environment {
                                PYVER = 'py39'
                                CONAN_REQUIREMENT = 'git+https://github.com/conan-io/conan.git@develop2'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                bat '.ci/generate_env_windows.bat'
                                bat '.ci/run_tests.bat'
                            }
                        }
                        stage('Windows - py39 - conan v2 latest') {
                            environment {
                                PYVER = 'py39'
                                CONAN_REQUIREMENT = 'conan==2.*'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                bat '.ci/generate_env_windows.bat'
                                bat '.ci/run_tests.bat'
                            }
                        }
                    }
                }
            }
        }
        stage("Linux") {
            failFast true
            parallel {
                stage('Linux - py36') {
                    agent {
                        label 'Linux'
                    }
                    stages {
                        stage('Linux - py36 - conan v1 dev') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = 'git+https://github.com/conan-io/conan.git@develop'
                                VIRTUALENV_NAME = 'py36conanv1dev'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py36 - conan v1 latest') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = 'conan=1.*'
                                VIRTUALENV_NAME = 'py36conanv1latest'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py36 - conan v1 prev') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = 'conan=1.61.0'
                                VIRTUALENV_NAME = 'py36conanv1prev'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py36 - conan v2 dev') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = 'git+https://github.com/conan-io/conan.git@develop2'
                                VIRTUALENV_NAME = 'py36conanv2dev'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py36 - conan v2 latest') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = 'conan=2.*'
                                VIRTUALENV_NAME = 'py36conanv2latest'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py36 - conan v2 prev') {
                            environment {
                                PYVER = 'py36'
                                CONAN_REQUIREMENT = 'conan=2.0.16'
                                VIRTUALENV_NAME = 'py36conanv2prev'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                    }
                }
                stage('Linux - py38') {
                    agent {
                        label 'Linux'
                    }
                    stages {
                        stage('Linux - py38 - conan v1 dev') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'git+https://github.com/conan-io/conan.git@develop'
                                VIRTUALENV_NAME = 'py38conanv1dev'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py38 - conan v1 latest') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'conan=1.*'
                                VIRTUALENV_NAME = 'py38conanv1latest'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py38 - conan v1 prev') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'conan=1.61.0'
                                VIRTUALENV_NAME = 'py38conanv1prev'
                                PYTEST_ARGS = "./tests --ignore=tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py38 - conan v2 dev') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'git+https://github.com/conan-io/conan.git@develop2'
                                VIRTUALENV_NAME = 'py38conanv2dev'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py38 - conan v2 latest') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'conan=2.*'
                                VIRTUALENV_NAME = 'py38conanv2latest'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                        stage('Linux - py38 - conan v2 prev') {
                            environment {
                                PYVER = 'py38'
                                CONAN_REQUIREMENT = 'conan=2.0.16'
                                VIRTUALENV_NAME = 'py38conanv2prev'
                                PYTEST_ARGS = "tests/test_hooks/conan-center-v2"
                            }
                            steps {
                                sh '.ci/generate_env_linux.sh'
                                sh '''
                                    eval "$(pyenv init -)"
                                    pyenv activate ${VIRTUALENV_NAME}
                                    python -m pytest ${PYTEST_ARGS}
                                '''
                            }
                        }
                    }
                }
            }
        }
    }
}
